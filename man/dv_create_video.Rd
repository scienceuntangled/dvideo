% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert.R
\name{dv_create_video}
\alias{dv_create_video}
\title{Make a self-contained video file from a playlist}
\usage{
dv_create_video(playlist, filename)
}
\arguments{
\item{playlist}{data.frame: a playlist as returned by \code{dv_video_playlist}. Note that only local video sources are supported}

\item{filename}{string: file to write to. If not specified (or \code{NULL}), a file in the temporary directory will be created. If \code{filename} exists, it will be overwritten. The extension of \code{filename} will determine the output format}
}
\value{
Filename of the created file.
}
\description{
Requires that ffmpeg be available on the system path. Note that the processing of each clip is done inside of a \code{future_lapply} call, and so you can have this part of the processing done in parallel by setting an appropriate futures plan before calling this function.
}
\details{
This function is experimental. In particular it is unlikely to work well with all video formats, and especially if the playlist comprises clips from different videos with different resolution/encoding/etc.
}
\examples{
\dontrun{
  my_playlist <- dv_video_playlist(..., type = "local")
  video_file <- dv_create_video(my_playlist)
  browseURL(video_file)

  ## run in parallel
  library(future.apply)
  plan(multisession)
  video_file <- dv_create_video(my_playlist)
}

}
\seealso{
\code{\link{dv_video_playlist}}
}
